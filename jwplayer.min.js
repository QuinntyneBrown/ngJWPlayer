/* global jwplayer */
/**
 * Created by David Karchmer on 9/11/15.
 */
!function(){"use strict";angular.module("ng-jwplayer",[]).constant("jwplayer",jwplayer)}(),function(){"use strict";function e(e){this.existJWPlayer=function(){return angular.isDefined(this.myPlayer)&&null!==this.myPlayer},this.initJWPlayer=function(n){return n=n||"myPlayer1",this.existJWPlayer()&&(this.myPlayer.remove(),this.myPlayer=null),this.myPlayer=e(n),this.myPlayer},this.cleanUp=function(){this.existJWPlayer()&&(this.myPlayer.remove(),this.myPlayer=null)}}angular.module("ng-jwplayer").service("jwplayerService",e),e.$inject=["jwplayer"]}(),function(){"use strict";function e(e,n,r,i){var t,a=function(n,a){var l=n.playerId,y=function(e){return'<div id="'+e+'"></div>'};a.html(y(l)),e(a.contents())(n),t=i.initJWPlayer(l),t.setup(n.playerOptions),t.on("ready",function(){r.$broadcast("ng-jwplayer-ready")})};return{restrict:"EC",scope:{playerId:"@",playerOptions:"="},link:function(e,r,t){e.$on("$destroy",function(){n.debug("jwplayer onDestroy"),i.cleanUp()}),e.$watch(function(){return t.ngSrc},function(i){n.debug("ng-src has changed: "+i),angular.isDefined(e.playerOptions)&&(e.playerOptions.file=i,a(e,r))}),angular.isDefined(t.ngSrc)&&angular.isDefined(e.playerOptions)&&(e.playerOptions.file=t.ngSrc,a(e,r))}}}angular.module("ng-jwplayer").directive("jwplayer",e),e.$inject=["$compile","$log","$rootScope","jwplayerService"]}();