/**
 * Created by David Karchmer on 9/11/15.
 */
!function(){"use strict";angular.module("ng-jwplayer",[])}(),function(){"use strict";function e(e){this.existJWPlayer=function(){return angular.isDefined(this.myPlayer)&&null!==this.myPlayer},this.initJWPlayer=function(n){return this.existJWPlayer()&&(e.debug("Instance of JWPlayer exists. Removing first"),this.myPlayer.remove(),this.myPlayer=null),this.myPlayer=jwplayer(n),this.myPlayer},this.cleanUp=function(){this.existJWPlayer()&&(e.debug("Removing existing JWPlayer"),this.myPlayer.remove(),this.myPlayer=null)}}angular.module("ng-jwplayer").service("jwplayerService",e),e.$inject=["$log"]}(),function(){"use strict";function e(e,n,i){var r,t=function(n,t){var l=n.playerId,a=function(e){return'<div id="'+e+'"></div>'};t.html(a(l)),e(t.contents())(n),r=i.initJWPlayer(l),r.setup(n.playerOptions)};return{restrict:"EC",scope:{playerId:"@",playerOptions:"="},link:function(e,r,l){e.$on("$destroy",function(){n.debug("jwplayer onDestroy"),i.cleanUp()}),e.$watch(function(){return l.ngSrc},function(i){n.debug("ng-src has changed: "+i),angular.isDefined(e.playerOptions)&&(e.playerOptions.file=i,t(e,r))}),angular.isDefined(l.ngSrc)&&angular.isDefined(e.playerOptions)&&(e.playerOptions.file=l.ngSrc,t(e,r))}}}angular.module("ng-jwplayer").directive("jwplayer",e),e.$inject=["$compile","$log","jwplayerService"]}();